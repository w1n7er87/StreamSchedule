// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamSchedule.Data;

#nullable disable

namespace StreamSchedule.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250503154103_EmonSubs")]
    partial class EmonSubs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("StreamSchedule.Data.Models.CommandAlias", b =>
                {
                    b.Property<string>("CommandName")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.HasKey("CommandName");

                    b.ToTable("CommandAliases");
                });

            modelBuilder.Entity("StreamSchedule.Data.Models.EmoteMonitorChannel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OutputChannelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("UpdateSubscribers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("UpdateSubscribersUsers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("EmoteMonitorChannels");
                });

            modelBuilder.Entity("StreamSchedule.Data.Models.PermittedTerm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alternative")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Anycase")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Noreplace")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PermittedTerms");
                });

            modelBuilder.Entity("StreamSchedule.Data.Models.Stream", b =>
                {
                    b.Property<DateOnly>("StreamDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("StreamTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreamTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("StreamDate");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("StreamSchedule.Data.Models.TextCommand", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Privileges")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("TextCommands");
                });

            modelBuilder.Entity("StreamSchedule.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesOffline")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesOnline")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("PreviousUsernames")
                        .HasColumnType("TEXT");

                    b.Property<int>("Privileges")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
